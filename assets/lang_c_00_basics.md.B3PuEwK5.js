import{_ as a,c as l,a2 as i,o as e}from"./chunks/framework.DRc6tsBz.js";const r=JSON.parse('{"title":"基础语法","description":"","frontmatter":{},"headers":[],"relativePath":"lang/c/00_basics.md","filePath":"lang/c/00_basics.md","lastUpdated":1715179189000}');const t=a({name:"lang/c/00_basics.md"},[["render",function(a,r,t,h,o,n){return e(),l("div",null,r[0]||(r[0]=[i('<h1 id="基础语法" tabindex="-1">基础语法 <a class="header-anchor" href="#基础语法" aria-label="Permalink to &quot;基础语法&quot;">​</a></h1><h2 id="关键字" tabindex="-1">关键字 <a class="header-anchor" href="#关键字" aria-label="Permalink to &quot;关键字&quot;">​</a></h2><h2 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h2><ul><li>整型 <ul><li>进制</li></ul></li><li>浮点型</li><li>布尔型</li></ul><h2 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h2><ul><li>关系运算符</li><li>逻辑运算符</li><li>条件运算符</li></ul><h2 id="流程控制" tabindex="-1">流程控制 <a class="header-anchor" href="#流程控制" aria-label="Permalink to &quot;流程控制&quot;">​</a></h2><ul><li>if else --&gt; 三目运算符</li><li>for</li><li>while/do while</li><li>switch case</li></ul><h2 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h2><h2 id="作用域" tabindex="-1">作用域 <a class="header-anchor" href="#作用域" aria-label="Permalink to &quot;作用域&quot;">​</a></h2><h2 id="复杂数据类型" tabindex="-1">复杂数据类型 <a class="header-anchor" href="#复杂数据类型" aria-label="Permalink to &quot;复杂数据类型&quot;">​</a></h2><ul><li>结构体</li><li>枚举</li><li>公用体</li><li>位域</li></ul><h2 id="宏" tabindex="-1">宏 <a class="header-anchor" href="#宏" aria-label="Permalink to &quot;宏&quot;">​</a></h2>',13)]))}]]);export{r as __pageData,t as default};
