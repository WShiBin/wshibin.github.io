import{_ as t,c as e,o as i,a4 as l}from"./chunks/framework.s8d9Ue88.js";const a=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"lang/c/04_stdlib.md","filePath":"lang/c/04_stdlib.md","lastUpdated":1715179189000}'),r={name:"lang/c/04_stdlib.md"},n=[l('<h2 id="标准" tabindex="-1">标准 <a class="header-anchor" href="#标准" aria-label="Permalink to &quot;标准&quot;">​</a></h2><p>文档：<a href="https://en.cppreference.com/w/c/header" target="_blank" rel="noreferrer">https://en.cppreference.com/w/c/header</a></p><h3 id="标准与实现" tabindex="-1">标准与实现 <a class="header-anchor" href="#标准与实现" aria-label="Permalink to &quot;标准与实现&quot;">​</a></h3><p>标准：提出要求 实现：完成提出的要求</p><p><strong>C语言的标准：</strong></p><p><a href="https://en.cppreference.com/w/c/language/history" target="_blank" rel="noreferrer">C89, C95, C99, C11, C17, C23</a></p><p>Linux下的glibc实现</p><h2 id="常用的头文件和接口" tabindex="-1">常用的头文件和接口 <a class="header-anchor" href="#常用的头文件和接口" aria-label="Permalink to &quot;常用的头文件和接口&quot;">​</a></h2><ul><li>&lt;assert.h&gt; Conditionally compiled macro that compares its argument to zero</li><li>&lt;ctype.h&gt; Functions to determine the type contained in character data</li><li>&lt;errno.h&gt; Macros reporting error conditions</li><li>&lt;fenv.h&gt; (C99) Floating-point environment</li><li>&lt;float.h&gt; Limits of float types</li><li>&lt;inttypes.h&gt; (C99) Format conversion of integer types</li><li>&lt;limits.h&gt; Sizes of basic types</li><li>&lt;math.h&gt; Common mathematics functions</li><li>&lt;signal.h&gt; Signal handling</li><li>&lt;stdarg.h&gt; Variable arguments</li><li>&lt;stdatomic.h&gt; (C11) Atomic types</li><li>&lt;stdbool.h&gt; (C99) Macros for boolean type</li><li>&lt;stddef.h&gt; Common macro definitions</li><li>&lt;stdint.h&gt; (C99) Fixed-width integer types</li><li>&lt;stdio.h&gt; Input/output</li><li>&lt;stdlib.h&gt; General utilities: memory management, program utilities, string conversions, random numbers</li><li>&lt;string.h&gt; String handling</li><li>&lt;time.h&gt; Time/date utilities</li></ul>',9)];const o=t(r,[["render",function(t,l,a,r,o,s){return i(),e("div",null,n)}]]);export{a as __pageData,o as default};
