import{_ as t,c as a,l as e,a as i,t as l,a4 as r,o}from"./chunks/framework.s8d9Ue88.js";const n=JSON.parse('{"title":"The TypeScript Handbook","description":"","frontmatter":{"title":"The TypeScript Handbook","outline":"deep","layout":"doc","prev":true,"next":true,"siderbar":true,"date":"2024-04-20T15:17:32.000Z"},"headers":[],"relativePath":"lang/typescript/index.md","filePath":"lang/typescript/index.md","lastUpdated":1715135539000}'),p={name:"lang/typescript/index.md"},c={id:"frontmatter-title",tabindex:"-1"},d=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),s=r('<h2 id="typescript-是什么" tabindex="-1">TypeScript 是什么？ <a class="header-anchor" href="#typescript-是什么" aria-label="Permalink to &quot;TypeScript 是什么？&quot;">​</a></h2><blockquote><p>TypeScript is JavaScript with syntax for types.</p><p>TypeScript is a strongly typed programming language that builds on JavaScript, giving you better tooling at any scale.</p></blockquote><ul><li>是 JavaScript 带类型语法的语言</li><li>基于 JavaScript: <ul><li>在 JavaScript 的基础上增加了一个编译器，编译时把 TypeScript 代码转换成 JavaScript</li><li>兼容：可以跑在 JS 可以跑的地方；可以利用 JavaScript 已有现在的生态</li></ul></li><li>强类型编程语言</li><li>更好的工具: 静态分析、编译器检查</li></ul><blockquote><p>既然是基于 JS，所以学习 TS 之前，应该先学好 JS</p></blockquote><h2 id="优缺点" tabindex="-1">优缺点 <a class="header-anchor" href="#优缺点" aria-label="Permalink to &quot;优缺点&quot;">​</a></h2><ul><li>又有新知识要学了，优点</li><li>会多写代码：写类型声明、类型定义、<code>null</code> 和 <code>undefined</code> 的检查代码</li><li>增加代码的可读性、项目可维护性，更找的发现部分错误 <ul><li>对于可读改、可维护性; 团队人越多，成本相对越低</li><li>利用工具、编译器在编写或编译器发现错误；没有工具、编译器检查，可能需要写更多的测试用例，给测试增加工作量</li><li>对于实际的项目研发，更早的发现错误 bug 损失越小，越是在研发流程的后面部分发现损失越大</li></ul></li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><ul><li>如果是小项目，一两个人开发，一次性项目，开发周期短，要求快速交付，用 JS 就好</li><li>如果是大项目，涉及到多人开发，后面可能迭代3年、5年，TS 优势明显</li><li>现有 JS 项目，看项目、人员、开发周期具体情况，是否要改 TS</li></ul><blockquote><p>其实从现状可以看到, 稍微大型项目、涉及到多人团队协作的项目都在用 TS 写</p></blockquote><h2 id="文档参考" tabindex="-1">文档参考 <a class="header-anchor" href="#文档参考" aria-label="Permalink to &quot;文档参考&quot;">​</a></h2><p>TS官网的 Handbook: <a href="https://www.typescriptlang.org/docs/handbook/intro.html" target="_blank" rel="noreferrer">https://www.typescriptlang.org/docs/handbook/intro.html</a></p>',11);const u=t(p,[["render",function(t,r,n,p,u,h){return o(),a("div",null,[e("h1",c,[i(l(t.$frontmatter.title)+" ",1),d]),s])}]]);export{n as __pageData,u as default};
