import{_ as e,c as t,a2 as a,o as r}from"./chunks/framework.DRc6tsBz.js";const i=JSON.parse('{"title":"【CMD】理解命令行程序","description":"","frontmatter":{"title":"【CMD】理解命令行程序","categories":"CMD","tags":["help","manual"],"sidebar":false,"prev":false,"next":false,"comments":true,"date":"2020-05-27T00:21:48.000Z"},"headers":[],"relativePath":"posts/2020/05_27_Understand-Command-Line-Programming.md","filePath":"posts/2020/05_27_Understand-Command-Line-Programming.md","lastUpdated":1713284123000}');const n=e({name:"posts/2020/05_27_Understand-Command-Line-Programming.md"},[["render",function(e,i,n,l,o,d){return r(),t("div",null,i[0]||(i[0]=[a('<h1 id="理解命令行程序" tabindex="-1">理解命令行程序 <a class="header-anchor" href="#理解命令行程序" aria-label="Permalink to &quot;理解命令行程序&quot;">​</a></h1><blockquote><p>**<a href="https://news.ycombinator.com/item?id=22476860" target="_blank" rel="noreferrer">Hacker News</a>**上有一个关于man手册的讨论非常有意思:<strong>对于Gui程序,界面可以去指导/指示用户去如何使用程序;而对于命令行的程序你必需去阅读man手册才能了解如何去使用它,所以应该把命令行的man手册视为命令行程序的一部分</strong></p></blockquote><p><strong>命令行程序</strong>: 程序 + 手册</p><h2 id="程序" tabindex="-1">程序 <a class="header-anchor" href="#程序" aria-label="Permalink to &quot;程序&quot;">​</a></h2><p>在大多数人开始接触Linux系统的时候，学的第一个东西大概就是命令行：ls, cp, mv, mkdir, cat, touch... 之类，就是用这些命令来给Linux系统下发指令，和电脑交互。在接触命令行相当长的时间内去死背命令行，有哪些命令行、有什么用，以及这个命令有哪些选项；毫无疑问，在你没有完全理解这个东西的时候，死背是很有用的，但是，然后呢，命令行为什么是这样？内部是如何实现的？</p><h3 id="命令行为什么是这样" tabindex="-1">命令行为什么是这样？ <a class="header-anchor" href="#命令行为什么是这样" aria-label="Permalink to &quot;命令行为什么是这样？&quot;">​</a></h3><p><code>$ cmd [--option] [arguments]</code>这是一个通用命令行的语法基本格式。</p><p>输入指令就是给电脑下达指令，好像在说：电脑，你给我去干啥？<em>干啥</em>由cmd命令来决定；以什么样的方式去做这个由option选项来决定，比如<code>ls -hal</code>中的<code>-hal</code>决定了用什么方式显示内容；参数更像是电脑在<em>干啥</em>时的附加参数或是操作对象。 下面来一一讨论</p><ul><li>cmd命令名字</li><li>option命令选项</li><li>arguments参数</li></ul><h4 id="cmd命令" tabindex="-1">cmd命令 <a class="header-anchor" href="#cmd命令" aria-label="Permalink to &quot;cmd命令&quot;">​</a></h4><p>我们敲的命令都是具有一定功能的程序。</p><p><strong>命令的分类</strong>：</p><ul><li>shell内置的命令</li><li>电脑里的二进制可执行程序，在系统安装好的时候就存在了</li><li>自己下载安装的程序</li><li>其它的bash、python脚本文件</li></ul><p>**命令名字：**记得当时我当时死背了很多的电脑快捷键，突然冒出一个问题：为什么命令行的命令行是长这样？为什么快捷键是那些键？后来总结、搜索相关资料写了：<a href="https://www.jianshu.com/p/f40f984c1212" target="_blank" rel="noreferrer">我为什么喜欢用键盘/快捷键,而不是鼠标?</a>；这里回到命令行命名的部分，大多命令都是相应单词的缩写或是有特定的含义：知乎上有人写了总结：<a href="https://www.zhihu.com/question/49073893/answer/114438355" target="_blank" rel="noreferrer">知乎：Linux中常用的命令都是哪些单词的缩写？</a></p><h2 id="man手册" tabindex="-1">man手册 <a class="header-anchor" href="#man手册" aria-label="Permalink to &quot;man手册&quot;">​</a></h2><h3 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h3><p>man的全称是manual，也就是手册、指南的意思，更现代的说法就是文档。文档是软件工程中非常重要的一部分</p><p><strong>文档的分类：</strong></p><p>分类分为很多章节section，可以通过<code>$ man man</code>可以查看，如下：</p><table tabindex="0"><thead><tr><th style="text-align:center;">区块</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">一般<a href="https://zh.wikipedia.org/wiki/%E5%91%BD%E4%BB%A4_(%E8%AE%A1%E7%AE%97%E6%9C%BA)" target="_blank" rel="noreferrer">命令</a></td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;"><a href="https://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8" target="_blank" rel="noreferrer">系统调用</a></td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;"><a href="https://zh.wikipedia.org/wiki/%E5%87%BD%E5%BC%8F%E5%BA%AB" target="_blank" rel="noreferrer">库</a>函数，涵盖<a href="https://zh.wikipedia.org/wiki/C%E6%A8%99%E6%BA%96%E5%87%BD%E6%95%B8%E5%BA%AB" target="_blank" rel="noreferrer">C标准函数库</a></td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;"><a href="https://zh.wikipedia.org/wiki/%E8%AE%BE%E5%A4%87%E6%96%87%E4%BB%B6" target="_blank" rel="noreferrer">特殊文件</a>（通常是/dev中的设备）和<a href="https://zh.wikipedia.org/wiki/%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F" target="_blank" rel="noreferrer">驱动程序</a></td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;"><a href="https://zh.wikipedia.org/wiki/%E6%AA%94%E6%A1%88%E6%A0%BC%E5%BC%8F" target="_blank" rel="noreferrer">文件格式</a>和约定</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;"><a href="https://zh.wikipedia.org/wiki/%E7%94%B5%E5%AD%90%E6%B8%B8%E6%88%8F" target="_blank" rel="noreferrer">游戏</a>和<a href="https://zh.wikipedia.org/wiki/%E8%9E%A2%E5%B9%95%E4%BF%9D%E8%AD%B7%E8%A3%9D%E7%BD%AE" target="_blank" rel="noreferrer">屏保</a></td></tr><tr><td style="text-align:center;">7</td><td style="text-align:center;">杂项</td></tr><tr><td style="text-align:center;">8</td><td style="text-align:center;">系统管理<a href="https://zh.wikipedia.org/wiki/%E5%91%BD%E4%BB%A4_(%E8%AE%A1%E7%AE%97%E6%9C%BA)" target="_blank" rel="noreferrer">命令</a>和<a href="https://zh.wikipedia.org/wiki/%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B" target="_blank" rel="noreferrer">守护进程</a></td></tr></tbody></table><p><strong>常用man命令：</strong></p><ul><li>man cmd_name：打开查找到的第一个对应的手册</li><li>man -a cmd_name：按章节顺序，依次打开找到的手册</li><li>man num cmd_name：打开指定章节中对应手册</li><li>man -f cmd_name：搜索命令：命令的名字，命令的简介</li></ul><p><strong>手册内命令：</strong></p><ul><li>h：help帮助</li><li>q：quit退出</li><li>vim命令模式命令：<code>jk du Ggg /nN</code></li></ul><h3 id="man命令的本质" tabindex="-1">man命令的本质 <a class="header-anchor" href="#man命令的本质" aria-label="Permalink to &quot;man命令的本质&quot;">​</a></h3><p>man还有个命令选项<code>$ man -w cmd_name</code>，可以去查找命令手册所在的路径。用vim打开，这个文件本质上就是一个拥有特定语法的文档，所以手册的本质上就是一个文档文件，</p><h3 id="man手册中的语法" tabindex="-1">man手册中的语法 <a class="header-anchor" href="#man手册中的语法" aria-label="Permalink to &quot;man手册中的语法&quot;">​</a></h3><ul><li><h2 id="包括哪些部分" tabindex="-1">包括哪些部分 <a class="header-anchor" href="#包括哪些部分" aria-label="Permalink to &quot;包括哪些部分&quot;">​</a></h2></li><li>SYNOPSIS中的语法含义 <ul><li><code>[...]</code>:可选</li><li><code>a|b</code>:二选一</li><li><code>&lt;command&gt;</code>:强制一定要写</li></ul></li></ul>',28)]))}]]);export{i as __pageData,n as default};
