import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.s8d9Ue88.js";const h=JSON.parse('{"title":"【C】libdbus上手教程","description":"","frontmatter":{"title":"【C】libdbus上手教程","categories":"C","tags":["C","DBus"],"sidebar":false,"prev":false,"next":false,"comments":true,"date":"2021-01-15T22:54:10.000Z"},"headers":[],"relativePath":"posts/2021/01_15_libdbus上手教程.md","filePath":"posts/2021/01_15_libdbus上手教程.md","lastUpdated":1713886889000}'),t={name:"posts/2021/01_15_libdbus上手教程.md"},e=[n('<h1 id="libdbus上手教程" tabindex="-1">libdbus上手教程 <a class="header-anchor" href="#libdbus上手教程" aria-label="Permalink to &quot;libdbus上手教程&quot;">​</a></h1><p>网站：<a href="https://www.freedesktop.org/wiki/Software/dbus/" target="_blank" rel="noreferrer">https://www.freedesktop.org/wiki/Software/dbus/</a> 代码：<a href="https://github.com/freedesktop/dbus" target="_blank" rel="noreferrer">https://github.com/freedesktop/dbus</a></p><h2 id="what-is-d-bus" tabindex="-1">What is D-Bus? <a class="header-anchor" href="#what-is-d-bus" aria-label="Permalink to &quot;What is D-Bus?&quot;">​</a></h2><blockquote><p>D-Bus is <strong>a message bus system</strong>, a simple way for <strong>applications to talk to one another</strong>. In addition to interprocess communication, D-Bus helps <strong>coordinate process lifecycle</strong>; it makes it simple and reliable to code a &quot;<strong>single instance</strong>&quot; application or daemon, and to <strong>launch applications</strong> and daemons on demand when their services are needed.</p></blockquote><h3 id="概括" tabindex="-1">概括： <a class="header-anchor" href="#概括" aria-label="Permalink to &quot;概括：&quot;">​</a></h3><ul><li>一个消息总线系统 <ul><li>一对多(signal)：类似于广播/订阅，可以携带消息数据，没有应答确认</li><li>一对一(method call)：有应答确认</li></ul></li><li>其他功能 <ul><li>启动其它进程</li><li>支持单个实例进程</li><li>在 app 退出的时候,通知程序</li></ul></li></ul><h2 id="系统-bus-和会话-bus" tabindex="-1">系统 bus 和会话 bus <a class="header-anchor" href="#系统-bus-和会话-bus" aria-label="Permalink to &quot;系统 bus 和会话 bus&quot;">​</a></h2><p><strong>system bus</strong>：在引导时就会启动，应用场景（待定） <strong>session bus</strong>：在用户登录后启动，属于那个用户私有。它是用户的应用程序用来通信的一个会话总线。</p><h2 id="low-level-api-vs-high-level-binding-apis" tabindex="-1">Low-level API vs high-level binding APIs <a class="header-anchor" href="#low-level-api-vs-high-level-binding-apis" aria-label="Permalink to &quot;Low-level API vs high-level binding APIs&quot;">​</a></h2><p>low-level API：<a href="https://www.freedesktop.org/wiki/Software/dbus/" target="_blank" rel="noreferrer">libdbus</a> high-level binding APIs：<a href="https://dbus.freedesktop.org/doc/dbus-glib/" target="_blank" rel="noreferrer">GLib</a>, <a href="https://doc.qt.io/qt-5/qtdbus-index.html" target="_blank" rel="noreferrer">Qt</a>, <a href="https://dbus.freedesktop.org/doc/dbus-python/" target="_blank" rel="noreferrer">Python</a>, Mono, Java, or whatever.</p><p><strong>区别：</strong></p><ul><li>low-level：依赖少，用起来更加麻烦/复杂,定制程度可以更高,更加适合自己封装,改造</li><li>high-level：用起来更加方便</li></ul><h2 id="version-numbers" tabindex="-1">Version numbers <a class="header-anchor" href="#version-numbers" aria-label="Permalink to &quot;Version numbers&quot;">​</a></h2><blockquote><p>软件版本格式：major.<strong>minor</strong>.patch</p></blockquote><p>minor version 是偶数的是 stable 版本,奇数的是 dev 版本 比如, development snapshots： 1.1.1, 1.1.2, 1.1.3, 1.3.4. Stable versions： 1.0, 1.0.1, 1.0.2, 1.2.1, 1.2.3</p><h2 id="d-bus-中的概念" tabindex="-1">D-Bus 中的概念 <a class="header-anchor" href="#d-bus-中的概念" aria-label="Permalink to &quot;D-Bus 中的概念&quot;">​</a></h2><p><strong>通过一个一对一通信流程来解释</strong>：</p><ul><li>启动 bus daemon, 生成 bus address(unix:path=/var/run/dbus/system_bus_socket)</li><li>获取 bus daemon 的 connect 连接, 注册 bus name(com.mycompany.TextEditor)</li><li>创建 msg, 发给哪个 bus name(进程)-&gt;obj(实例)-&gt;Interface-&gt;Method</li><li>发送 msg 到 bus daemon</li><li>bus daemon 发送到相应的 bus name 进程</li><li>接收到消息后返回数据</li><li>...</li></ul><p><img src="/assets/Xnip2021-01-15_23-03-16.DnNKdjUY.webp" alt="" loading="lazy"><strong>相应概念：</strong></p><p>Address(bus) –&gt; Bus Name(进程) –&gt; Object path(实例) –&gt; Interface –&gt; Method</p><table><thead><tr><th><strong>A...</strong></th><th><strong>is identified by a(n)...</strong></th><th><strong>which looks like...</strong></th><th><strong>and is chosen by...</strong></th></tr></thead><tbody><tr><td>Bus</td><td>address</td><td><code>unix:path=/var/run/dbus/system_bus_socket</code></td><td>system configuration</td></tr><tr><td>Connection</td><td>bus name</td><td><code>:34-907</code> (<em>unique</em>) or <code>com.mycompany.TextEditor</code> (<em>well-known</em>)</td><td>D-Bus (<em>unique</em>) or the owning program (<em>well-known</em>)</td></tr><tr><td>Object</td><td>path</td><td><code>/com/mycompany/TextFileManager</code></td><td>the owning program</td></tr><tr><td><em>Interface</em></td><td><em>interface name</em></td><td><code>org.freedesktop.Hal.Manager</code></td><td><em>the owning program</em></td></tr><tr><td>Member</td><td>member name</td><td><code>ListNames</code></td><td>the owning program</td></tr></tbody></table><blockquote><h3 id="d-bus-faq-4-what-is-the-difference-between-a-bus-name-and-object-path-and-an-interface" tabindex="-1"><a href="https://dbus.freedesktop.org/doc/dbus-faq.html#idm39" target="_blank" rel="noreferrer">D-Bus FAQ 4. What is the difference between a bus name, and object path, and an interface?</a> <a class="header-anchor" href="#d-bus-faq-4-what-is-the-difference-between-a-bus-name-and-object-path-and-an-interface" aria-label="Permalink to &quot;[D-Bus FAQ 4. What is the difference between a bus name, and object path, and an interface?](https://dbus.freedesktop.org/doc/dbus-faq.html#idm39)&quot;">​</a></h3><p>If you imagine a C++ program that implements a network service, then the bus name is the hostname of the computer running this C++ program, the object path is a C++ object instance pointer, and an interface is a C++ class (a pure virtual or abstract class, to be exact). In Java terms, the object path is an object reference, and an interface is a Java interface. People get confused because if they write an application with a single object instance and a single interface, then the bus name, object path, and interface look redundant. For example, you might have a text editor that uses the bus name org.freedesktop.TextEditor, has a global singleton object called /org/freedesktop/TextEditor, and that singleton object could implement the interface org.freedesktop.TextEditor. However, a text editor application could as easily own multiple bus names (for example, org.kde.KWrite in addition to generic TextEditor), have multiple objects (maybe /org/kde/documents/4352 where the number changes according to the document), and each object could implement multiple interfaces, such as org.freedesktop.DBus.Introspectable, org.freedesktop.BasicTextField, org.kde.RichTextDocument.</p></blockquote><h2 id="d-bus-消息类型" tabindex="-1">D-Bus 消息类型 <a class="header-anchor" href="#d-bus-消息类型" aria-label="Permalink to &quot;D-Bus 消息类型&quot;">​</a></h2><p>消息通过 D-Bus 在进程间传递。有四类消息：</p><ul><li>Method call 消息：将触发对象的一个 method</li><li>Method return 消息：触发的方法返回的结果</li><li>Signal 消息：通知，可以看作为事件消息。</li><li>Error 消息：触发的方法返回一个异常</li></ul><h2 id="相应工具" tabindex="-1">相应工具 <a class="header-anchor" href="#相应工具" aria-label="Permalink to &quot;相应工具&quot;">​</a></h2><h3 id="command-line-命令行工具" tabindex="-1">Command-line 命令行工具 <a class="header-anchor" href="#command-line-命令行工具" aria-label="Permalink to &quot;Command-line 命令行工具&quot;">​</a></h3><ul><li><a href="https://dbus.freedesktop.org/doc/dbus-daemon.1.html" target="_blank" rel="noreferrer">dbus-daemon</a>：Message bus daemon</li><li><a href="https://dbus.freedesktop.org/doc/dbus-launch.1.html" target="_blank" rel="noreferrer">dbus-launch</a>：从 shell 脚本来启动 message bus 工具</li><li><a href="https://dbus.freedesktop.org/doc/dbus-send.1.html" target="_blank" rel="noreferrer">dbus-send</a>：发送消息到 message bus</li><li><a href="https://dbus.freedesktop.org/doc/dbus-monitor.1.html" target="_blank" rel="noreferrer">dbus-monitor</a>：debug probe to print message bus messages</li><li><a href="https://dbus.freedesktop.org/doc/dbus-uuidgen.1.html" target="_blank" rel="noreferrer">dbus-uuidgen</a>：生成 UUIDs 工具</li></ul><p>使用示例：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## launch message bus</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dbus-launch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sh-syntax</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## dbus-send</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># send signal</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dbus-send</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type=signal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  org.signal.poweroff.test_signal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> string:&quot;hello&quot;</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># send message_call</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dbus-send</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dest=org.freedesktop.ExampleName</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">               \\</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            /org/freedesktop/sample/object/name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">              \\</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            org.freedesktop.ExampleInterface.ExampleMethod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   \\</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            int32:47</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> string:&#39;hello world&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> double:65.32</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       \\</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            array:string:&quot;1st item&quot;,&quot;next item&quot;,&quot;last item&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            dict:string:int32:&quot;one&quot;,1,&quot;two&quot;,2,&quot;three&quot;,3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      \\</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            variant:int32:-8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                 \\</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            objpath:/org/freedesktop/sample/object/name</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## dbus-uuidgen</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># it just prints a new uuid</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dbus-uuidgen</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ebb40ad49f9d4d8f44faa3bc5fffdc27</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># prints the machine UUID by default</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dbus-uuidgen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --get</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">5b86dc18cce752c5404d2f0a5ffd1885</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dbus-uuidgen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ensure=/usr/local/var/lib/dbus/machine-id</span></span></code></pre></div><p>dbus-daemon 启动脚本：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## test for an existing bus daemon, just to be safe</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$DBUS_SESSION_BUS_ADDRESS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    ## if not found, launch a new one</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbus-launch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sh-syntax</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --exit-with-session</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;D-Bus per-session daemon address is: </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$DBUS_SESSION_BUS_ADDRESS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span></code></pre></div><h3 id="graphical-图形调试工具" tabindex="-1">Graphical 图形调试工具 <a class="header-anchor" href="#graphical-图形调试工具" aria-label="Permalink to &quot;Graphical 图形调试工具&quot;">​</a></h3><p><a href="https://github.com/GNOME/d-feet" target="_blank" rel="noreferrer">D-Feet</a></p><p><img src="/assets/d-feet-overview.b_7c8vnO.webp" alt="" loading="lazy"></p><p><a href="https://github.com/freedesktop/bustle" target="_blank" rel="noreferrer">Bustle</a></p><h2 id="libdbus-使用实例" tabindex="-1">libdbus 使用实例： <a class="header-anchor" href="#libdbus-使用实例" aria-label="Permalink to &quot;libdbus 使用实例：&quot;">​</a></h2><h3 id="method-call-消息例子" tabindex="-1">Method Call 消息例子： <a class="header-anchor" href="#method-call-消息例子" aria-label="Permalink to &quot;Method Call 消息例子：&quot;">​</a></h3><p>场景：launcher 访问 db_server 获取设备信息，比如：获取 cpu_id。launcher 作为客户端，db_server 做为服务端</p><p><img src="/assets/image-20210823144204174.BNu-OP-j.webp" alt="" loading="lazy"></p><p>launcher.c 代码：</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;stdio.h&gt;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;stdlib.h&gt;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;string.h&gt;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dbus/dbus.h&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_BUS_NAME_LAUNCHER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.vdiscovery.launcher&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bus_name</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_BUS_NAME_DB_SERVER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.vdiscovery.db_server&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// object</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_OJBECT_DB_SERVER_DEVICE_INFO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/com/vdiscovery/db_server/device_info&quot;</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// iface</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_IFACE_DB_SERVER_DEVICE_INFO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.vdiscovery.db_server.device_info&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// method</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_GET_IMEI</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;get_imei&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_GET_CPU_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;get_cpu_id&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_SET_IMEI</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;set_imei&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_SET_CPU_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;set_cpu_id&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    dbus_bool_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusError       err;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusConnection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_error_init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 1.获取链接</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    conn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbus_bus_get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DBUS_BUS_SESSION, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbus_error_is_set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err)) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bus get err : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err.message);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 2.注册自己的name</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_bus_request_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn, DBUS_BUS_NAME_LAUNCHER, DBUS_NAME_FLAG_REPLACE_EXISTING, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbus_error_is_set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err)) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bus request name err : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err.message);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 3.创建消息</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbus_message_new_method_call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        DBUS_BUS_NAME_DB_SERVER,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        DBUS_OJBECT_DB_SERVER_DEVICE_INFO,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        DBUS_IFACE_DB_SERVER_DEVICE_INFO,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_SET_CPU_ID);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 3.1.添加携带信息</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    char*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cpu_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_message_append_args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(req, DBUS_TYPE_STRING, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cpu_id, DBUS_TYPE_INVALID);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 4.获取回应消息</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reply     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbus_connection_send_with_reply_and_block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn, req, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    char*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        reply_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_message_get_args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reply, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err, DBUS_TYPE_STRING, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">reply_str, DBUS_TYPE_INVALID);</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;set_cpu_id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, reply:reply_str = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cpu_id, reply_str);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>db_server.c 代码：</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;stdio.h&gt;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;unistd.h&gt;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;stdbool.h&gt;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;string.h&gt;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dbus/dbus.h&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 应用唯一表示：name</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_BUS_NAME_DB_SERVER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.vdiscovery.db_server&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// device_info</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_OJBECT_DB_SERVER_DEVICE_INFO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/com/vdiscovery/db_server/device_info&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_IFACE_DB_SERVER_DEVICE_INFO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.vdiscovery.db_server.device_info&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_GET_IMEI</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;get_imei&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_GET_CPU_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;get_cpu_id&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_SET_IMEI</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;set_imei&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_SET_CPU_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;set_cpu_id&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// kv store</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_OJBECT_DB_SERVER_KV_STORE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/com/vdiscovery/db_server/kv_store&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_IFACE_DB_SERVER_KV_STORE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.vdiscovery.db_server.kv_store&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_METHOD_CALL_DB_SERVER_KV_PUT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;put&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_METHOD_CALL_DB_SERVER_KV_GET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;get&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_METHOD_CALL_DB_SERVER_KV_DELETE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;delete&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// content</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DBUS_OJBECT_DB_SERVER_CONTENT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/com/vdiscovery/db_server/content&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DBusHandlerResult </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_get_imei</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DBusConnection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> user_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // todo: do something: 从数据库取</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reply    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbus_message_new_method_return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    char*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        imei_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;imei:fasdfasdflfasdk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_message_append_args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reply, DBUS_TYPE_STRING, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">imei_str, DBUS_TYPE_INVALID);</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_connection_send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(connection, reply, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBUS_HANDLER_RESULT_HANDLED;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DBusHandlerResult </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_get_cpu_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DBusConnection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> user_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // todo: do something: 从数据库取</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reply      </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbus_message_new_method_return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    char*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        cpu_id_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;cpu_id:231412341&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_message_append_args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reply, DBUS_TYPE_STRING, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cpu_id_str, DBUS_TYPE_INVALID);</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_connection_send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(connection, reply, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBUS_HANDLER_RESULT_HANDLED;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DBusHandlerResult </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_set_imei</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DBusConnection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> user_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusError error;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_error_init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">error);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    char*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // json</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_message_get_args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">error, DBUS_TYPE_STRING, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">req_str, DBUS_TYPE_INVALID);</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;req_str: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, req_str);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // todo: do something with req_str, 存到数据库</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reply    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbus_message_new_method_return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    char*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        succ_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;store success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_message_append_args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reply, DBUS_TYPE_STRING, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">succ_str, DBUS_TYPE_INVALID);</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_connection_send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(connection, reply, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBUS_HANDLER_RESULT_HANDLED;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DBusHandlerResult </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_set_cpu_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DBusConnection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> user_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusError error;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_error_init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">error);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    char*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // json</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_message_get_args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">error, DBUS_TYPE_STRING, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">req_str, DBUS_TYPE_INVALID);</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;req_str: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, req_str);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // todo: do something with req_str, 存到数据库</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reply    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbus_message_new_method_return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    char*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        succ_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;store success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_message_append_args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reply, DBUS_TYPE_STRING, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">succ_str, DBUS_TYPE_INVALID);</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_connection_send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(connection, reply, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBUS_HANDLER_RESULT_HANDLED;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DBusHandlerResult </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">device_info_handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DBusConnection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> user_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbus_message_is_method_call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message, DBUS_IFACE_DB_SERVER_DEVICE_INFO, DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_GET_IMEI)) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _get_imei</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(connection, message, user_data);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbus_message_is_method_call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message, DBUS_IFACE_DB_SERVER_DEVICE_INFO, DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_GET_CPU_ID)) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _get_cpu_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(connection, message, user_data);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbus_message_is_method_call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message, DBUS_IFACE_DB_SERVER_DEVICE_INFO, DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_SET_IMEI)) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _set_imei</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(connection, message, user_data);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbus_message_is_method_call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message, DBUS_IFACE_DB_SERVER_DEVICE_INFO, DBUS_METHOD_CALL_DB_SERVER_DEVICE_INFO_SET_CPU_ID)) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _set_cpu_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(connection, message, user_data);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBUS_HANDLER_RESULT_HANDLED;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DBusHandlerResult </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kv_store_handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DBusConnection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> user_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // todo</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBUS_HANDLER_RESULT_HANDLED;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DBusHandlerResult </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">content_handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DBusConnection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DBusMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> user_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // todo</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBUS_HANDLER_RESULT_HANDLED;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DBusObjectPathVTable g_device_info_table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {.message_function </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> device_info_handler};</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DBusObjectPathVTable g_kv_table          </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {.message_function </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kv_store_handler};</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DBusObjectPathVTable g_content_table     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {.message_function </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> content_handler};</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    dbus_bool_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusError       err;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DBusConnection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_error_init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 1.获取链接</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    conn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbus_bus_get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DBUS_BUS_SESSION, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbus_error_is_set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err)) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bus get err : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err.message);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 2.注册自己的name</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dbus_bus_request_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn, DBUS_BUS_NAME_DB_SERVER, DBUS_NAME_FLAG_REPLACE_EXISTING, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbus_error_is_set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err)) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bus request name err : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err.message);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 3.注册自己的Object</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbus_connection_register_object_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn, DBUS_OJBECT_DB_SERVER_DEVICE_INFO, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g_device_info_table, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbus_connection_register_object_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn, DBUS_OJBECT_DB_SERVER_KV_STORE, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g_kv_table, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbus_connection_register_object_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn, DBUS_OJBECT_DB_SERVER_CONTENT, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g_content_table, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ret) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Failed to register a object path for &#39;TestObject&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 4.read/write/despatch消息</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        dbus_connection_read_write_dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="signal-消息例子" tabindex="-1">Signal 消息例子： <a class="header-anchor" href="#signal-消息例子" aria-label="Permalink to &quot;Signal 消息例子：&quot;">​</a></h3><p>todo：</p><h2 id="配置文件" tabindex="-1">配置文件： <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件：&quot;">​</a></h2><h2 id="启动其它服务" tabindex="-1">启动其它服务： <a class="header-anchor" href="#启动其它服务" aria-label="Permalink to &quot;启动其它服务：&quot;">​</a></h2><h2 id="其它" tabindex="-1">其它： <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它：&quot;">​</a></h2><h3 id="我当时是怎么学习-dbus-的" tabindex="-1">我当时是怎么学习 dbus 的？ <a class="header-anchor" href="#我当时是怎么学习-dbus-的" aria-label="Permalink to &quot;我当时是怎么学习 dbus 的？&quot;">​</a></h3><p>核心结构体<a href="https://dbus.freedesktop.org/doc/api/html/group__DBusConnection.html" target="_blank" rel="noreferrer">DBusConnection</a>和<a href="https://dbus.freedesktop.org/doc/api/html/structDBusMessage.html" target="_blank" rel="noreferrer">DBusMessage</a></p><p><a href="https://dbus.freedesktop.org/doc/dbus-faq.html" target="_blank" rel="noreferrer">D-Bus FAQ</a></p><h3 id="dbus-是如果连接上-dbus-daemon-调用dbus-bus-get-dbus-bus-session-err-就-get-到了" tabindex="-1">Dbus 是如果连接上 dbus-daemon，调用<code>dbus_bus_get(DBUS_BUS_SESSION, &amp;err);</code>就 get 到了？ <a class="header-anchor" href="#dbus-是如果连接上-dbus-daemon-调用dbus-bus-get-dbus-bus-session-err-就-get-到了" aria-label="Permalink to &quot;Dbus 是如果连接上 dbus-daemon，调用`dbus_bus_get(DBUS_BUS_SESSION, &amp;err);`就 get 到了？&quot;">​</a></h3><p>换一种方式：如果把参数传给程序</p><ul><li>参数写死</li><li>main 参数<code>argv</code></li><li>特定环境变量（程序自定义）</li><li>配置文件（配置非常多）</li></ul><h3 id="dbusmessage" tabindex="-1">DbusMessage： <a class="header-anchor" href="#dbusmessage" aria-label="Permalink to &quot;DbusMessage：&quot;">​</a></h3><h2 id="references" tabindex="-1">References： <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References：&quot;">​</a></h2><ul><li>网站：<a href="https://www.freedesktop.org/wiki/Software/dbus/" target="_blank" rel="noreferrer">https://www.freedesktop.org/wiki/Software/dbus/</a></li><li>dbus-specification 规范：<a href="https://dbus.freedesktop.org/doc/dbus-specification.html" target="_blank" rel="noreferrer">https://dbus.freedesktop.org/doc/dbus-specification.html</a></li><li>D-Bus FAQ：<a href="https://dbus.freedesktop.org/doc/dbus-faq.html" target="_blank" rel="noreferrer">https://dbus.freedesktop.org/doc/dbus-faq.html</a></li><li>README：<a href="https://dbus.freedesktop.org/doc/README" target="_blank" rel="noreferrer">https://dbus.freedesktop.org/doc/README</a></li><li>相关中文介绍文章：<a href="https://thebigdoc.readthedocs.io/en/latest/dbus/dbus.html" target="_blank" rel="noreferrer">https://thebigdoc.readthedocs.io/en/latest/dbus/dbus.html</a></li></ul>',58)];const l=s(t,[["render",function(s,n,h,t,l,k){return a(),i("div",null,e)}]]);export{h as __pageData,l as default};
